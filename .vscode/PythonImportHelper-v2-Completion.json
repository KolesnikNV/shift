[
    {
        "label": "annotations",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "sqlalchemy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "engine_from_config",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "pool",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "select",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Boolean",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Column",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "Integer",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "String",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "func",
        "importPath": "sqlalchemy",
        "description": "sqlalchemy",
        "isExtraImport": true,
        "detail": "sqlalchemy",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "op",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "context",
        "importPath": "alembic",
        "description": "alembic",
        "isExtraImport": true,
        "detail": "alembic",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "postgresql",
        "importPath": "sqlalchemy.dialects",
        "description": "sqlalchemy.dialects",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects",
        "documentation": {}
    },
    {
        "label": "fileConfig",
        "importPath": "logging.config",
        "description": "logging.config",
        "isExtraImport": true,
        "detail": "logging.config",
        "documentation": {}
    },
    {
        "label": "Base",
        "importPath": "shift.db.models",
        "description": "shift.db.models",
        "isExtraImport": true,
        "detail": "shift.db.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "shift.db.models",
        "description": "shift.db.models",
        "isExtraImport": true,
        "detail": "shift.db.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "shift.db.models",
        "description": "shift.db.models",
        "isExtraImport": true,
        "detail": "shift.db.models",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timedelta",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "uuid",
        "description": "uuid",
        "isExtraImport": true,
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "jwt",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jwt",
        "description": "jwt",
        "detail": "jwt",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Depends",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Request",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordBearer",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "OAuth2PasswordBearer",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "HTTPAuthorizationCredentials",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "HTTPBearer",
        "importPath": "fastapi.security",
        "description": "fastapi.security",
        "isExtraImport": true,
        "detail": "fastapi.security",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Generator",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "db.models",
        "description": "db.models",
        "isExtraImport": true,
        "detail": "db.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "db.models",
        "description": "db.models",
        "isExtraImport": true,
        "detail": "db.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "db.models",
        "description": "db.models",
        "isExtraImport": true,
        "detail": "db.models",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "EmailStr",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "validator",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "ShowUser",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "UserCreate",
        "importPath": "api.models",
        "description": "api.models",
        "isExtraImport": true,
        "detail": "api.models",
        "documentation": {}
    },
    {
        "label": "check_is_admin",
        "importPath": "db.crud",
        "description": "db.crud",
        "isExtraImport": true,
        "detail": "db.crud",
        "documentation": {}
    },
    {
        "label": "get_user_id",
        "importPath": "db.crud",
        "description": "db.crud",
        "isExtraImport": true,
        "detail": "db.crud",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "db.session",
        "description": "db.session",
        "isExtraImport": true,
        "detail": "db.session",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "db.session",
        "description": "db.session",
        "isExtraImport": true,
        "detail": "db.session",
        "documentation": {}
    },
    {
        "label": "Jinja2Templates",
        "importPath": "fastapi.templating",
        "description": "fastapi.templating",
        "isExtraImport": true,
        "detail": "fastapi.templating",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "psycopg2",
        "description": "psycopg2",
        "isExtraImport": true,
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "AsyncSession",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "create_async_engine",
        "importPath": "sqlalchemy.ext.asyncio",
        "description": "sqlalchemy.ext.asyncio",
        "isExtraImport": true,
        "detail": "sqlalchemy.ext.asyncio",
        "documentation": {}
    },
    {
        "label": "decode_access_token",
        "importPath": "shift.api.auth",
        "description": "shift.api.auth",
        "isExtraImport": true,
        "detail": "shift.api.auth",
        "documentation": {}
    },
    {
        "label": "generate_access_token",
        "importPath": "shift.api.auth",
        "description": "shift.api.auth",
        "isExtraImport": true,
        "detail": "shift.api.auth",
        "documentation": {}
    },
    {
        "label": "get_token",
        "importPath": "shift.api.auth",
        "description": "shift.api.auth",
        "isExtraImport": true,
        "detail": "shift.api.auth",
        "documentation": {}
    },
    {
        "label": "UserToken",
        "importPath": "shift.api.models",
        "description": "shift.api.models",
        "isExtraImport": true,
        "detail": "shift.api.models",
        "documentation": {}
    },
    {
        "label": "UserUpdate",
        "importPath": "shift.api.models",
        "description": "shift.api.models",
        "isExtraImport": true,
        "detail": "shift.api.models",
        "documentation": {}
    },
    {
        "label": "Enum",
        "importPath": "enum",
        "description": "enum",
        "isExtraImport": true,
        "detail": "enum",
        "documentation": {}
    },
    {
        "label": "UUID",
        "importPath": "sqlalchemy.dialects.postgresql",
        "description": "sqlalchemy.dialects.postgresql",
        "isExtraImport": true,
        "detail": "sqlalchemy.dialects.postgresql",
        "documentation": {}
    },
    {
        "label": "declarative_base",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "sessionmaker",
        "importPath": "sqlalchemy.orm",
        "description": "sqlalchemy.orm",
        "isExtraImport": true,
        "detail": "sqlalchemy.orm",
        "documentation": {}
    },
    {
        "label": "shift.settings",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shift.settings",
        "description": "shift.settings",
        "detail": "shift.settings",
        "documentation": {}
    },
    {
        "label": "uvicorn",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uvicorn",
        "description": "uvicorn",
        "detail": "uvicorn",
        "documentation": {}
    },
    {
        "label": "auth_router",
        "importPath": "api.auth",
        "description": "api.auth",
        "isExtraImport": true,
        "detail": "api.auth",
        "documentation": {}
    },
    {
        "label": "user_router",
        "importPath": "api.views",
        "description": "api.views",
        "isExtraImport": true,
        "detail": "api.views",
        "documentation": {}
    },
    {
        "label": "APIRouter",
        "importPath": "fastapi.routing",
        "description": "fastapi.routing",
        "isExtraImport": true,
        "detail": "fastapi.routing",
        "documentation": {}
    },
    {
        "label": "StaticFiles",
        "importPath": "fastapi.staticfiles",
        "description": "fastapi.staticfiles",
        "isExtraImport": true,
        "detail": "fastapi.staticfiles",
        "documentation": {}
    },
    {
        "label": "count_users",
        "importPath": "shift.db.session",
        "description": "shift.db.session",
        "isExtraImport": true,
        "detail": "shift.db.session",
        "documentation": {}
    },
    {
        "label": "get_db",
        "importPath": "shift.db.session",
        "description": "shift.db.session",
        "isExtraImport": true,
        "detail": "shift.db.session",
        "documentation": {}
    },
    {
        "label": "Env",
        "importPath": "envparse",
        "description": "envparse",
        "isExtraImport": true,
        "detail": "envparse",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"bin\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir, *os.environ.get(\"PATH\", \"\").split(os.pathsep)])\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"../lib/python3.11/site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": ".venv.bin.activate_this",
        "description": ".venv.bin.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": ".venv.bin.activate_this",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.02c109794eb9_change_user_s_model",
        "description": "migrations.versions.02c109794eb9_change_user_s_model",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('is_admin', sa.Boolean(), nullable=True))\n    op.drop_column('Users', 'roles')\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('roles', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False))\n    op.drop_column('Users', 'is_admin')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.02c109794eb9_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.02c109794eb9_change_user_s_model",
        "description": "migrations.versions.02c109794eb9_change_user_s_model",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('roles', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False))\n    op.drop_column('Users', 'is_admin')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.02c109794eb9_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.02c109794eb9_change_user_s_model",
        "description": "migrations.versions.02c109794eb9_change_user_s_model",
        "peekOfCode": "revision = '02c109794eb9'\ndown_revision = '8bdead7a445e'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('is_admin', sa.Boolean(), nullable=True))\n    op.drop_column('Users', 'roles')\n    # ### end Alembic commands ###\ndef downgrade() -> None:",
        "detail": "migrations.versions.02c109794eb9_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.02c109794eb9_change_user_s_model",
        "description": "migrations.versions.02c109794eb9_change_user_s_model",
        "peekOfCode": "down_revision = '8bdead7a445e'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('is_admin', sa.Boolean(), nullable=True))\n    op.drop_column('Users', 'roles')\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.02c109794eb9_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.02c109794eb9_change_user_s_model",
        "description": "migrations.versions.02c109794eb9_change_user_s_model",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('is_admin', sa.Boolean(), nullable=True))\n    op.drop_column('Users', 'roles')\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('roles', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False))",
        "detail": "migrations.versions.02c109794eb9_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.02c109794eb9_change_user_s_model",
        "description": "migrations.versions.02c109794eb9_change_user_s_model",
        "peekOfCode": "depends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('is_admin', sa.Boolean(), nullable=True))\n    op.drop_column('Users', 'roles')\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('roles', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False))\n    op.drop_column('Users', 'is_admin')",
        "detail": "migrations.versions.02c109794eb9_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.23f115caa39a_change_user_s_model",
        "description": "migrations.versions.23f115caa39a_change_user_s_model",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.23f115caa39a_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.23f115caa39a_change_user_s_model",
        "description": "migrations.versions.23f115caa39a_change_user_s_model",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.23f115caa39a_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.23f115caa39a_change_user_s_model",
        "description": "migrations.versions.23f115caa39a_change_user_s_model",
        "peekOfCode": "revision = '23f115caa39a'\ndown_revision = 'a37e0f677d16'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.23f115caa39a_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.23f115caa39a_change_user_s_model",
        "description": "migrations.versions.23f115caa39a_change_user_s_model",
        "peekOfCode": "down_revision = 'a37e0f677d16'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass",
        "detail": "migrations.versions.23f115caa39a_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.23f115caa39a_change_user_s_model",
        "description": "migrations.versions.23f115caa39a_change_user_s_model",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.23f115caa39a_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.23f115caa39a_change_user_s_model",
        "description": "migrations.versions.23f115caa39a_change_user_s_model",
        "peekOfCode": "depends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.23f115caa39a_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.71a7f983bd00_create_user_s_table",
        "description": "migrations.versions.71a7f983bd00_create_user_s_table",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table(\n        \"Users\",\n        sa.Column(\"user_id\", sa.UUID(), nullable=False),\n        sa.Column(\"name\", sa.String(), nullable=False),\n        sa.Column(\"surname\", sa.String(), nullable=False),\n        sa.Column(\"email\", sa.String(), nullable=False),\n        sa.Column(\"is_active\", sa.Boolean(), nullable=True),\n        sa.Column(\"salary\", sa.Float(), nullable=False),",
        "detail": "migrations.versions.71a7f983bd00_create_user_s_table",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.71a7f983bd00_create_user_s_table",
        "description": "migrations.versions.71a7f983bd00_create_user_s_table",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_table(\"Users\")\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.71a7f983bd00_create_user_s_table",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.71a7f983bd00_create_user_s_table",
        "description": "migrations.versions.71a7f983bd00_create_user_s_table",
        "peekOfCode": "revision = \"71a7f983bd00\"\ndown_revision = None\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table(\n        \"Users\",\n        sa.Column(\"user_id\", sa.UUID(), nullable=False),\n        sa.Column(\"name\", sa.String(), nullable=False),",
        "detail": "migrations.versions.71a7f983bd00_create_user_s_table",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.71a7f983bd00_create_user_s_table",
        "description": "migrations.versions.71a7f983bd00_create_user_s_table",
        "peekOfCode": "down_revision = None\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table(\n        \"Users\",\n        sa.Column(\"user_id\", sa.UUID(), nullable=False),\n        sa.Column(\"name\", sa.String(), nullable=False),\n        sa.Column(\"surname\", sa.String(), nullable=False),",
        "detail": "migrations.versions.71a7f983bd00_create_user_s_table",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.71a7f983bd00_create_user_s_table",
        "description": "migrations.versions.71a7f983bd00_create_user_s_table",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table(\n        \"Users\",\n        sa.Column(\"user_id\", sa.UUID(), nullable=False),\n        sa.Column(\"name\", sa.String(), nullable=False),\n        sa.Column(\"surname\", sa.String(), nullable=False),\n        sa.Column(\"email\", sa.String(), nullable=False),",
        "detail": "migrations.versions.71a7f983bd00_create_user_s_table",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.71a7f983bd00_create_user_s_table",
        "description": "migrations.versions.71a7f983bd00_create_user_s_table",
        "peekOfCode": "depends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.create_table(\n        \"Users\",\n        sa.Column(\"user_id\", sa.UUID(), nullable=False),\n        sa.Column(\"name\", sa.String(), nullable=False),\n        sa.Column(\"surname\", sa.String(), nullable=False),\n        sa.Column(\"email\", sa.String(), nullable=False),\n        sa.Column(\"is_active\", sa.Boolean(), nullable=True),",
        "detail": "migrations.versions.71a7f983bd00_create_user_s_table",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "description": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('password', sa.String(), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_column('Users', 'password')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "description": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_column('Users', 'password')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "description": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "peekOfCode": "revision = '77a99d56c8cb'\ndown_revision = 'a0be42f8e7ac'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('password', sa.String(), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "description": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "peekOfCode": "down_revision = 'a0be42f8e7ac'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('password', sa.String(), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_column('Users', 'password')",
        "detail": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "description": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('password', sa.String(), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_column('Users', 'password')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "description": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "peekOfCode": "depends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('password', sa.String(), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_column('Users', 'password')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.77a99d56c8cb_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.8bdead7a445e_change_user_s_model",
        "description": "migrations.versions.8bdead7a445e_change_user_s_model",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('roles', postgresql.ARRAY(sa.String()), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_column('Users', 'roles')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.8bdead7a445e_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.8bdead7a445e_change_user_s_model",
        "description": "migrations.versions.8bdead7a445e_change_user_s_model",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_column('Users', 'roles')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.8bdead7a445e_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.8bdead7a445e_change_user_s_model",
        "description": "migrations.versions.8bdead7a445e_change_user_s_model",
        "peekOfCode": "revision = '8bdead7a445e'\ndown_revision = '99aa00eaa09d'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('roles', postgresql.ARRAY(sa.String()), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.8bdead7a445e_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.8bdead7a445e_change_user_s_model",
        "description": "migrations.versions.8bdead7a445e_change_user_s_model",
        "peekOfCode": "down_revision = '99aa00eaa09d'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('roles', postgresql.ARRAY(sa.String()), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_column('Users', 'roles')",
        "detail": "migrations.versions.8bdead7a445e_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.8bdead7a445e_change_user_s_model",
        "description": "migrations.versions.8bdead7a445e_change_user_s_model",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('roles', postgresql.ARRAY(sa.String()), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_column('Users', 'roles')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.8bdead7a445e_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.8bdead7a445e_change_user_s_model",
        "description": "migrations.versions.8bdead7a445e_change_user_s_model",
        "peekOfCode": "depends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column('Users', sa.Column('roles', postgresql.ARRAY(sa.String()), nullable=False))\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.drop_column('Users', 'roles')\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.8bdead7a445e_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "description": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "description": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "description": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "peekOfCode": "revision = '99aa00eaa09d'\ndown_revision = 'b18dbea93b09'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "description": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "peekOfCode": "down_revision = 'b18dbea93b09'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass",
        "detail": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "description": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "description": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "peekOfCode": "depends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.99aa00eaa09d_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "description": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.alter_column(\n        \"Users\",\n        \"user_id\",\n        existing_type=sa.UUID(),\n        comment=\"Unique user identifier\",\n        existing_nullable=False,\n    )\n    op.alter_column(",
        "detail": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "description": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.alter_column(\n        \"Users\",\n        \"salary_increase_date\",\n        existing_type=sa.VARCHAR(),\n        comment=None,\n        existing_comment=\"Expected salary increase date:\",\n        existing_nullable=False,\n    )",
        "detail": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "description": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "peekOfCode": "revision = \"a0be42f8e7ac\"\ndown_revision = \"ec9be37ff1f7\"\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.alter_column(\n        \"Users\",\n        \"user_id\",\n        existing_type=sa.UUID(),",
        "detail": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "description": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "peekOfCode": "down_revision = \"ec9be37ff1f7\"\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.alter_column(\n        \"Users\",\n        \"user_id\",\n        existing_type=sa.UUID(),\n        comment=\"Unique user identifier\",",
        "detail": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "description": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.alter_column(\n        \"Users\",\n        \"user_id\",\n        existing_type=sa.UUID(),\n        comment=\"Unique user identifier\",\n        existing_nullable=False,",
        "detail": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "description": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "peekOfCode": "depends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.alter_column(\n        \"Users\",\n        \"user_id\",\n        existing_type=sa.UUID(),\n        comment=\"Unique user identifier\",\n        existing_nullable=False,\n    )",
        "detail": "migrations.versions.a0be42f8e7ac_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.a37e0f677d16_change_user_s_model",
        "description": "migrations.versions.a37e0f677d16_change_user_s_model",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.a37e0f677d16_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.a37e0f677d16_change_user_s_model",
        "description": "migrations.versions.a37e0f677d16_change_user_s_model",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.a37e0f677d16_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.a37e0f677d16_change_user_s_model",
        "description": "migrations.versions.a37e0f677d16_change_user_s_model",
        "peekOfCode": "revision = 'a37e0f677d16'\ndown_revision = '02c109794eb9'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.a37e0f677d16_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.a37e0f677d16_change_user_s_model",
        "description": "migrations.versions.a37e0f677d16_change_user_s_model",
        "peekOfCode": "down_revision = '02c109794eb9'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass",
        "detail": "migrations.versions.a37e0f677d16_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.a37e0f677d16_change_user_s_model",
        "description": "migrations.versions.a37e0f677d16_change_user_s_model",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.a37e0f677d16_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.a37e0f677d16_change_user_s_model",
        "description": "migrations.versions.a37e0f677d16_change_user_s_model",
        "peekOfCode": "depends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.a37e0f677d16_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.b18dbea93b09_change_user_s_model",
        "description": "migrations.versions.b18dbea93b09_change_user_s_model",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.b18dbea93b09_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.b18dbea93b09_change_user_s_model",
        "description": "migrations.versions.b18dbea93b09_change_user_s_model",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.b18dbea93b09_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.b18dbea93b09_change_user_s_model",
        "description": "migrations.versions.b18dbea93b09_change_user_s_model",
        "peekOfCode": "revision = 'b18dbea93b09'\ndown_revision = '77a99d56c8cb'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.b18dbea93b09_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.b18dbea93b09_change_user_s_model",
        "description": "migrations.versions.b18dbea93b09_change_user_s_model",
        "peekOfCode": "down_revision = '77a99d56c8cb'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass",
        "detail": "migrations.versions.b18dbea93b09_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.b18dbea93b09_change_user_s_model",
        "description": "migrations.versions.b18dbea93b09_change_user_s_model",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.b18dbea93b09_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.b18dbea93b09_change_user_s_model",
        "description": "migrations.versions.b18dbea93b09_change_user_s_model",
        "peekOfCode": "depends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.b18dbea93b09_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "description": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column(\n        \"Users\", sa.Column(\"salary_increase_date\", sa.String(), nullable=False)\n    )\n    op.drop_column(\"Users\", \"next_salary_up\")\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column(",
        "detail": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "description": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column(\n        \"Users\",\n        sa.Column(\"next_salary_up\", sa.VARCHAR(), autoincrement=False, nullable=False),\n    )\n    op.drop_column(\"Users\", \"salary_increase_date\")\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "description": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "peekOfCode": "revision = \"ec9be37ff1f7\"\ndown_revision = \"71a7f983bd00\"\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column(\n        \"Users\", sa.Column(\"salary_increase_date\", sa.String(), nullable=False)\n    )\n    op.drop_column(\"Users\", \"next_salary_up\")",
        "detail": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "description": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "peekOfCode": "down_revision = \"71a7f983bd00\"\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column(\n        \"Users\", sa.Column(\"salary_increase_date\", sa.String(), nullable=False)\n    )\n    op.drop_column(\"Users\", \"next_salary_up\")\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "description": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column(\n        \"Users\", sa.Column(\"salary_increase_date\", sa.String(), nullable=False)\n    )\n    op.drop_column(\"Users\", \"next_salary_up\")\n    # ### end Alembic commands ###\ndef downgrade() -> None:",
        "detail": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "description": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "peekOfCode": "depends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    op.add_column(\n        \"Users\", sa.Column(\"salary_increase_date\", sa.String(), nullable=False)\n    )\n    op.drop_column(\"Users\", \"next_salary_up\")\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.ec9be37ff1f7_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "upgrade",
        "kind": 2,
        "importPath": "migrations.versions.f11ad100ad14_change_user_s_model",
        "description": "migrations.versions.f11ad100ad14_change_user_s_model",
        "peekOfCode": "def upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.f11ad100ad14_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "downgrade",
        "kind": 2,
        "importPath": "migrations.versions.f11ad100ad14_change_user_s_model",
        "description": "migrations.versions.f11ad100ad14_change_user_s_model",
        "peekOfCode": "def downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.f11ad100ad14_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "revision",
        "kind": 5,
        "importPath": "migrations.versions.f11ad100ad14_change_user_s_model",
        "description": "migrations.versions.f11ad100ad14_change_user_s_model",
        "peekOfCode": "revision = 'f11ad100ad14'\ndown_revision = '23f115caa39a'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###",
        "detail": "migrations.versions.f11ad100ad14_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "down_revision",
        "kind": 5,
        "importPath": "migrations.versions.f11ad100ad14_change_user_s_model",
        "description": "migrations.versions.f11ad100ad14_change_user_s_model",
        "peekOfCode": "down_revision = '23f115caa39a'\nbranch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass",
        "detail": "migrations.versions.f11ad100ad14_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "branch_labels",
        "kind": 5,
        "importPath": "migrations.versions.f11ad100ad14_change_user_s_model",
        "description": "migrations.versions.f11ad100ad14_change_user_s_model",
        "peekOfCode": "branch_labels = None\ndepends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.f11ad100ad14_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "depends_on",
        "kind": 5,
        "importPath": "migrations.versions.f11ad100ad14_change_user_s_model",
        "description": "migrations.versions.f11ad100ad14_change_user_s_model",
        "peekOfCode": "depends_on = None\ndef upgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###\ndef downgrade() -> None:\n    # ### commands auto generated by Alembic - please adjust! ###\n    pass\n    # ### end Alembic commands ###",
        "detail": "migrations.versions.f11ad100ad14_change_user_s_model",
        "documentation": {}
    },
    {
        "label": "run_migrations_offline",
        "kind": 2,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "def run_migrations_offline() -> None:\n    \"\"\"Run migrations in 'offline' mode.\n    This configures the context with just a URL\n    and not an Engine, though an Engine is acceptable\n    here as well.  By skipping the Engine creation\n    we don't even need a DBAPI to be available.\n    Calls to context.execute() here emit the given string to the\n    script output.\n    \"\"\"\n    url = config.get_main_option(\"sqlalchemy.url\")",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "run_migrations_online",
        "kind": 2,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "def run_migrations_online() -> None:\n    \"\"\"Run migrations in 'online' mode.\n    In this scenario we need to create an Engine\n    and associate a connection with the context.\n    \"\"\"\n    connectable = engine_from_config(\n        config.get_section(config.config_ini_section, {}),\n        prefix=\"sqlalchemy.\",\n        poolclass=pool.NullPool,\n    )",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "config",
        "kind": 5,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "config = context.config\n# Interpret the config file for Python logging.\n# This line sets up loggers basically.\nif config.config_file_name is not None:\n    fileConfig(config.config_file_name)\n# add your model's MetaData object here\n# for 'autogenerate' support\nfrom shift.db.models import Base\ntarget_metadata = Base.metadata\n# target_metadata = None",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "target_metadata",
        "kind": 5,
        "importPath": "migrations.env",
        "description": "migrations.env",
        "peekOfCode": "target_metadata = Base.metadata\n# target_metadata = None\n# other values from the config, defined by the needs of env.py,\n# can be acquired:\n# my_important_option = config.get_main_option(\"my_important_option\")\n# ... etc.\ndef run_migrations_offline() -> None:\n    \"\"\"Run migrations in 'offline' mode.\n    This configures the context with just a URL\n    and not an Engine, though an Engine is acceptable",
        "detail": "migrations.env",
        "documentation": {}
    },
    {
        "label": "get_token",
        "kind": 2,
        "importPath": "shift.api.auth",
        "description": "shift.api.auth",
        "peekOfCode": "def get_token(token: str = Depends(oauth2_scheme)) -> str:\n    print(\"authorization =\", token)\n    if token is None:\n        return None\n    print(token)\n    return token\ndef generate_access_token(user_id: UUID) -> str:\n    delta = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    expires_date = datetime.utcnow() + delta\n    payload = {\"user_id\": str(user_id), \"exp\": expires_date}",
        "detail": "shift.api.auth",
        "documentation": {}
    },
    {
        "label": "generate_access_token",
        "kind": 2,
        "importPath": "shift.api.auth",
        "description": "shift.api.auth",
        "peekOfCode": "def generate_access_token(user_id: UUID) -> str:\n    delta = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    expires_date = datetime.utcnow() + delta\n    payload = {\"user_id\": str(user_id), \"exp\": expires_date}\n    token = jwt.encode(payload, SECRET_KEY, algorithm=ALGORITHM)\n    user_id = jwt.decode(token, SECRET_KEY, algorithms=ALGORITHM)\n    return token\ndef decode_access_token(token: str = Depends(get_token)) -> dict:\n    user_id = jwt.decode(token, SECRET_KEY, algorithms=ALGORITHM)\n    print(user_id)",
        "detail": "shift.api.auth",
        "documentation": {}
    },
    {
        "label": "decode_access_token",
        "kind": 2,
        "importPath": "shift.api.auth",
        "description": "shift.api.auth",
        "peekOfCode": "def decode_access_token(token: str = Depends(get_token)) -> dict:\n    user_id = jwt.decode(token, SECRET_KEY, algorithms=ALGORITHM)\n    print(user_id)\n    return user_id\ndef validate_token(token: str):\n    try:\n        jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\n    except jwt.ExpiredSignatureError:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,",
        "detail": "shift.api.auth",
        "documentation": {}
    },
    {
        "label": "validate_token",
        "kind": 2,
        "importPath": "shift.api.auth",
        "description": "shift.api.auth",
        "peekOfCode": "def validate_token(token: str):\n    try:\n        jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\n    except jwt.ExpiredSignatureError:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"Недействительный токен\",\n        )\n    except jwt.InvalidTokenError:\n        raise HTTPException(",
        "detail": "shift.api.auth",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "shift.api.auth",
        "description": "shift.api.auth",
        "peekOfCode": "SECRET_KEY = \"your-secret-key\"\nALGORITHM = \"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES = 30\nauth_router = APIRouter()\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/login\")\ndef get_token(token: str = Depends(oauth2_scheme)) -> str:\n    print(\"authorization =\", token)\n    if token is None:\n        return None\n    print(token)",
        "detail": "shift.api.auth",
        "documentation": {}
    },
    {
        "label": "ALGORITHM",
        "kind": 5,
        "importPath": "shift.api.auth",
        "description": "shift.api.auth",
        "peekOfCode": "ALGORITHM = \"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES = 30\nauth_router = APIRouter()\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/login\")\ndef get_token(token: str = Depends(oauth2_scheme)) -> str:\n    print(\"authorization =\", token)\n    if token is None:\n        return None\n    print(token)\n    return token",
        "detail": "shift.api.auth",
        "documentation": {}
    },
    {
        "label": "ACCESS_TOKEN_EXPIRE_MINUTES",
        "kind": 5,
        "importPath": "shift.api.auth",
        "description": "shift.api.auth",
        "peekOfCode": "ACCESS_TOKEN_EXPIRE_MINUTES = 30\nauth_router = APIRouter()\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/login\")\ndef get_token(token: str = Depends(oauth2_scheme)) -> str:\n    print(\"authorization =\", token)\n    if token is None:\n        return None\n    print(token)\n    return token\ndef generate_access_token(user_id: UUID) -> str:",
        "detail": "shift.api.auth",
        "documentation": {}
    },
    {
        "label": "auth_router",
        "kind": 5,
        "importPath": "shift.api.auth",
        "description": "shift.api.auth",
        "peekOfCode": "auth_router = APIRouter()\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/login\")\ndef get_token(token: str = Depends(oauth2_scheme)) -> str:\n    print(\"authorization =\", token)\n    if token is None:\n        return None\n    print(token)\n    return token\ndef generate_access_token(user_id: UUID) -> str:\n    delta = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)",
        "detail": "shift.api.auth",
        "documentation": {}
    },
    {
        "label": "oauth2_scheme",
        "kind": 5,
        "importPath": "shift.api.auth",
        "description": "shift.api.auth",
        "peekOfCode": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/login\")\ndef get_token(token: str = Depends(oauth2_scheme)) -> str:\n    print(\"authorization =\", token)\n    if token is None:\n        return None\n    print(token)\n    return token\ndef generate_access_token(user_id: UUID) -> str:\n    delta = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    expires_date = datetime.utcnow() + delta",
        "detail": "shift.api.auth",
        "documentation": {}
    },
    {
        "label": "TunedModel",
        "kind": 6,
        "importPath": "shift.api.models",
        "description": "shift.api.models",
        "peekOfCode": "class TunedModel(BaseModel):\n    class Config:\n        \"\"\"tells pydantic to convert even non dict obj to json\"\"\"\n        orm_mode = True\nclass ShowUser(TunedModel):\n    user_id: uuid.UUID\n    name: str\n    surname: str\n    email: EmailStr\n    salary: int",
        "detail": "shift.api.models",
        "documentation": {}
    },
    {
        "label": "ShowUser",
        "kind": 6,
        "importPath": "shift.api.models",
        "description": "shift.api.models",
        "peekOfCode": "class ShowUser(TunedModel):\n    user_id: uuid.UUID\n    name: str\n    surname: str\n    email: EmailStr\n    salary: int\n    salary_increase_date: str\nclass UserCreate(BaseModel):\n    name: str\n    surname: str",
        "detail": "shift.api.models",
        "documentation": {}
    },
    {
        "label": "UserCreate",
        "kind": 6,
        "importPath": "shift.api.models",
        "description": "shift.api.models",
        "peekOfCode": "class UserCreate(BaseModel):\n    name: str\n    surname: str\n    email: EmailStr\n    password: str\n    is_admin: bool\n    salary: int\n    salary_increase_date: str\n    @validator(\"name\")\n    def validate_name(cls, value):",
        "detail": "shift.api.models",
        "documentation": {}
    },
    {
        "label": "UserUpdate",
        "kind": 6,
        "importPath": "shift.api.models",
        "description": "shift.api.models",
        "peekOfCode": "class UserUpdate(BaseModel):\n    name: Optional[str]\n    surname: Optional[str]\n    email: Optional[EmailStr]\n    password: Optional[str]\n    is_admin: Optional[bool]\n    salary: Optional[int]\n    salary_increase_date: Optional[str]\nclass UserToken(BaseModel):\n    access_token: str",
        "detail": "shift.api.models",
        "documentation": {}
    },
    {
        "label": "UserToken",
        "kind": 6,
        "importPath": "shift.api.models",
        "description": "shift.api.models",
        "peekOfCode": "class UserToken(BaseModel):\n    access_token: str\n    token_type: str\nclass TokenData(BaseModel):\n    email: str\n    password: str",
        "detail": "shift.api.models",
        "documentation": {}
    },
    {
        "label": "TokenData",
        "kind": 6,
        "importPath": "shift.api.models",
        "description": "shift.api.models",
        "peekOfCode": "class TokenData(BaseModel):\n    email: str\n    password: str",
        "detail": "shift.api.models",
        "documentation": {}
    },
    {
        "label": "LETTER_MATCH_PATTERN",
        "kind": 5,
        "importPath": "shift.api.models",
        "description": "shift.api.models",
        "peekOfCode": "LETTER_MATCH_PATTERN = re.compile(r\"^[а-яА-Яa-zA-Z\\-]+$\")\nclass TunedModel(BaseModel):\n    class Config:\n        \"\"\"tells pydantic to convert even non dict obj to json\"\"\"\n        orm_mode = True\nclass ShowUser(TunedModel):\n    user_id: uuid.UUID\n    name: str\n    surname: str\n    email: EmailStr",
        "detail": "shift.api.models",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": "shift.api.views",
        "description": "shift.api.views",
        "peekOfCode": "logger = logging.getLogger(__name__)\nlogging.basicConfig(filename=\"logfile.log\", level=logging.DEBUG)\nuser_router = APIRouter()\ntemplates = Jinja2Templates(directory=\"/Users/nikitakolesnik/shift/templates\")\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/login/\")\n@user_router.post(\"/login/\", response_model=UserToken)\nasync def login(\n    user_id: str, password: str, db: AsyncSession = Depends(get_db)\n):\n    user = await get_user_id(user_id, db)",
        "detail": "shift.api.views",
        "documentation": {}
    },
    {
        "label": "user_router",
        "kind": 5,
        "importPath": "shift.api.views",
        "description": "shift.api.views",
        "peekOfCode": "user_router = APIRouter()\ntemplates = Jinja2Templates(directory=\"/Users/nikitakolesnik/shift/templates\")\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/login/\")\n@user_router.post(\"/login/\", response_model=UserToken)\nasync def login(\n    user_id: str, password: str, db: AsyncSession = Depends(get_db)\n):\n    user = await get_user_id(user_id, db)\n    if user and user.password == password:\n        token = generate_access_token(user.user_id)",
        "detail": "shift.api.views",
        "documentation": {}
    },
    {
        "label": "templates",
        "kind": 5,
        "importPath": "shift.api.views",
        "description": "shift.api.views",
        "peekOfCode": "templates = Jinja2Templates(directory=\"/Users/nikitakolesnik/shift/templates\")\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/login/\")\n@user_router.post(\"/login/\", response_model=UserToken)\nasync def login(\n    user_id: str, password: str, db: AsyncSession = Depends(get_db)\n):\n    user = await get_user_id(user_id, db)\n    if user and user.password == password:\n        token = generate_access_token(user.user_id)\n        return {\"access_token\": token, \"token_type\": \"bearer\"}",
        "detail": "shift.api.views",
        "documentation": {}
    },
    {
        "label": "oauth2_scheme",
        "kind": 5,
        "importPath": "shift.api.views",
        "description": "shift.api.views",
        "peekOfCode": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/login/\")\n@user_router.post(\"/login/\", response_model=UserToken)\nasync def login(\n    user_id: str, password: str, db: AsyncSession = Depends(get_db)\n):\n    user = await get_user_id(user_id, db)\n    if user and user.password == password:\n        token = generate_access_token(user.user_id)\n        return {\"access_token\": token, \"token_type\": \"bearer\"}\n    else:",
        "detail": "shift.api.views",
        "documentation": {}
    },
    {
        "label": "Role",
        "kind": 6,
        "importPath": "shift.db.models",
        "description": "shift.db.models",
        "peekOfCode": "class Role(str, Enum):\n    ADMIN = (\"Admin\",)\n    USER = (\"User\",)\nclass User(Base):\n    __tablename__ = \"Users\"\n    user_id = Column(\n        UUID(as_uuid=True),\n        primary_key=True,\n        default=uuid.uuid4,\n        comment=\"Unique user identifier\",",
        "detail": "shift.db.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "shift.db.models",
        "description": "shift.db.models",
        "peekOfCode": "class User(Base):\n    __tablename__ = \"Users\"\n    user_id = Column(\n        UUID(as_uuid=True),\n        primary_key=True,\n        default=uuid.uuid4,\n        comment=\"Unique user identifier\",\n    )\n    name = Column(String, nullable=False)\n    surname = Column(String, nullable=False)",
        "detail": "shift.db.models",
        "documentation": {}
    },
    {
        "label": "Base",
        "kind": 5,
        "importPath": "shift.db.models",
        "description": "shift.db.models",
        "peekOfCode": "Base = declarative_base()\nclass Role(str, Enum):\n    ADMIN = (\"Admin\",)\n    USER = (\"User\",)\nclass User(Base):\n    __tablename__ = \"Users\"\n    user_id = Column(\n        UUID(as_uuid=True),\n        primary_key=True,\n        default=uuid.uuid4,",
        "detail": "shift.db.models",
        "documentation": {}
    },
    {
        "label": "engine",
        "kind": 5,
        "importPath": "shift.db.session",
        "description": "shift.db.session",
        "peekOfCode": "engine = create_async_engine(\n    settings.REAL_DATABASE_URL, future=True, echo=True\n)\nasync_session = sessionmaker(\n    engine, expire_on_commit=False, class_=AsyncSession\n)\nasync def get_db() -> Generator:\n    try:\n        session: AsyncSession = async_session()\n        yield session",
        "detail": "shift.db.session",
        "documentation": {}
    },
    {
        "label": "async_session",
        "kind": 5,
        "importPath": "shift.db.session",
        "description": "shift.db.session",
        "peekOfCode": "async_session = sessionmaker(\n    engine, expire_on_commit=False, class_=AsyncSession\n)\nasync def get_db() -> Generator:\n    try:\n        session: AsyncSession = async_session()\n        yield session\n    finally:\n        await session.close()\nasync def count_users():",
        "detail": "shift.db.session",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "shift.main",
        "description": "shift.main",
        "peekOfCode": "app = FastAPI(title=\"shift\")\napp.mount(\n    \"/static\",\n    StaticFiles(directory=\"/Users/nikitakolesnik/shift/static\"),\n    name=\"static\",\n)\n@app.on_event(\"startup\")\nasync def populate_admin():\n    async for db in get_db():\n        async with db.begin():",
        "detail": "shift.main",
        "documentation": {}
    },
    {
        "label": "main_api_router",
        "kind": 5,
        "importPath": "shift.main",
        "description": "shift.main",
        "peekOfCode": "main_api_router = APIRouter()\nmain_api_router.include_router(auth_router, tags=[\"auth\"])\nmain_api_router.include_router(user_router, tags=[\"user\"])\napp.include_router(main_api_router)\nif __name__ == \"__main__\":\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)",
        "detail": "shift.main",
        "documentation": {}
    },
    {
        "label": "env",
        "kind": 5,
        "importPath": "shift.settings",
        "description": "shift.settings",
        "peekOfCode": "env = Env()\nREAL_DATABASE_URL = env.str(\n    \"REAL_DATABASE_URL\",\n    default=\"postgresql+asyncpg://postgres:postgres@0.0.0.0:5432/postgres\",\n)",
        "detail": "shift.settings",
        "documentation": {}
    },
    {
        "label": "REAL_DATABASE_URL",
        "kind": 5,
        "importPath": "shift.settings",
        "description": "shift.settings",
        "peekOfCode": "REAL_DATABASE_URL = env.str(\n    \"REAL_DATABASE_URL\",\n    default=\"postgresql+asyncpg://postgres:postgres@0.0.0.0:5432/postgres\",\n)",
        "detail": "shift.settings",
        "documentation": {}
    }
]